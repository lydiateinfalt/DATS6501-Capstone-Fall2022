# -*- coding: utf-8 -*-
"""UrbanAreas_tutorials.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-WZuk9CiRyXvJispRaEgeUqUzFyxc-Bx

pip install gdal
pip install geopandas
pip install rasterio
pip install geojson
pip install json
pip install GOSTRocks
"""

import geopandas as gpd
import rasterio
import sys, os, importlib
import rasterio
import src.UrbanRaster as urban

# from google.colab import drive
# drive.mount('/content/drive')

sys.path.append("../../")
#sys.path.append("/content/drive/My Drive/Colab Notebooks/")
#os.chdir('/content/drive/MyDrive/Colab Notebooks/GOST_Urban/')

# Define input population raster
output_folder = "data/Output"
data_folder = "data"
acronym = 'punjab_'
aoi_file = os.path.join(data_folder, "Punjab.geojson")
pop_file = os.path.join(data_folder, "punjab_gpo.tif")
# out_urban = os.path.join(output_folder, "urban_extents.geojson")
# out_hd_urban = os.path.join(output_folder, "hd_urban_extents.geojson")

inAOI = gpd.read_file(aoi_file)

# Shouldn't need to execute this unless you change your AOI
if not os.path.exists(pop_file):
    sys.path.append("../../../gostrocks/src")
    import GOSTRocks.rasterMisc as rMisc
    global_population = "data/ppp_2020_1km_Aggregated.tif"
    inR = rasterio.open(global_population)
    rMisc.clipRaster(inR, inAOI, pop_file)
    
inR = rasterio.open(pop_file)

# calculate urban
urban_calculator = urban.urbanGriddedPop(inR)
urban_calculator.calculateUrban

urban_extents = urban_calculator.calculateUrban(densVal=300, totalPopThresh=5000, 
                                               smooth=False, queen=False,raster_pop='data/' + acronym + 'urban.tif',
                                               verbose=True)

hd_urban_extents = urban_calculator.calculateUrban(densVal=1500, totalPopThresh=50000, 
                                               smooth=True, queen=True,raster_pop ='data/' + acronym + 'hdurban.tif',
                                               verbose=True)

output_folder = "data/Output"
out_urban = os.path.join(output_folder, acronym + "urban_extents.geojson")
out_hd_urban = os.path.join(output_folder, acronym +"hd_urban_extents.geojson")

urban_extents.to_file(out_urban, driver="GeoJSON")
hd_urban_extents.to_file(out_hd_urban, driver="GeoJSON")

out_urban = os.path.join(output_folder, acronym + "urban_extents.tif")
out_hd_urban = os.path.join(output_folder, acronym +"hd_urban_extents.tif")



